{{- if .Values.validatingWebhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-ovn-webhook
  namespace: {{ .Values.namespace }}
  {{- with .Values.validatingWebhook.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.validatingWebhook.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-ovn-webhook
      app.kubernetes.io/part-of: kube-ovn
  template:
    metadata:
      {{- with .Values.validatingWebhook.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: kube-ovn-webhook
        app.kubernetes.io/part-of: kube-ovn
        {{- with .Values.validatingWebhook.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      tolerations:
        - operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: kube-ovn-webhook
                  app.kubernetes.io/part-of: kube-ovn
              topologyKey: kubernetes.io/hostname
      serviceAccountName: ovn
      containers:
        - name: kube-ovn-webhook
          image: {{ .Values.global.registry.address }}/{{ .Values.global.images.kubeovn.repository }}:{{ .Values.global.images.kubeovn.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /kube-ovn/kube-ovn-webhook
          args:
            - --port=8443
            - --health-probe-port=8080
            - --v=3
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: health-probe
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: kube-ovn-webhook-secret
      nodeSelector:
        kubernetes.io/os: "linux"
{{- end }}